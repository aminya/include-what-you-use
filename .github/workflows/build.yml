name: Build

on: [push]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-18.04
          # - windows-latest
          # - macOS-latest

        llvm_version:
          - 10.0.0

    steps:

    - name: Set version env variables
      run: |
        echo ::set-env name=VERSION::${{ matrix.llvm_version }}
        echo ::set-env name=VERSION_float::$( echo ${{ matrix.llvm_version }} | sed -n 's/\([0-9]*.[0-9]\)..*$/\1/p' )
        echo ::set-env name=VERSION_int::$( echo ${{ matrix.llvm_version }} | sed -n 's/\([0-9]*\)..*$/\1/p' )

    - name: Find checkout branch
      run: |
        echo ::set-env name=CHECKOUT_BRANCH::$( if [ $VERSION_int -ge 10 ]; then echo $VERSION_int; else echo $VERSION_float; fi )

    # Install Dependencies
    - name: Ubuntu Dependencies
      if: startsWith(matrix.os,'ubuntu')
      run: |
          # llvm
          sudo add-apt-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-$VERSION_int main"
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-get install -y clang-$VERSION_int
          sudo apt-get install -y llvm-$VERSION_int-dev
          sudo apt-get install -y libclang-$VERSION_int-dev
          # ninja
          sudo apt-get install -y ninja-build

    - name: Windows Dependencies
      if: startsWith(matrix.os,'windows')
      run: |
          choco install -y ninja
          choco install -y llvm --version=$VERSION

    - name: MacOS Dependencies
      if: startsWith(matrix.os,'macos')
      run: |
          brew install ninja

    - name: Extract the version of Clang
      if: startsWith(matrix.os,'windows')
      run: |
        echo ::set-env name=VERSION::$( clang --version | sed -n 's/^.*version *\([0-9]*.[0-9]\).*$/\1/p' )
        echo ::set-env name=VERSION_int::$( clang --version | sed -n 's/^.*version *\([0-9]*\)..*$/\1/p' )

    - name: Absolute paths to LLVM's root and bin directory
      run: |
        echo ::set-env name=PREFIX_PATH::$( llvm-config-$VERSION_int --prefix )
        echo ::set-env name=BIN_PATH::$( llvm-config-$VERSION_int --bindir )

    - name: Windows - Absolute paths to LLVM's root and bin directory
      if: startsWith(matrix.os,'windows')
      run: |
        echo ::set-env name=PREFIX_PATH::$( which clang | xargs -0 dirname | xargs -0 dirname )
        echo ::set-env name=BIN_PATH::$( which clang | xargs -0 dirname )

    # Checkout proper Branch
    - name: checkout branch
      uses: actions/checkout@v2
      with:
        ref: clang_${{env.CHECKOUT_BRANCH}}

    - name: Create Build Directory
      run: mkdir build

    - name: Build IWYU
      working-directory: ./build
      run: |
        cmake -GNinja -DCMAKE_PREFIX_PATH=$PREFIX_PATH -DCMAKE_C_COMPILER=$BIN_PATH/clang -DCMAKE_CXX_COMPILER=$BIN_PATH/clang++ -DCMAKE_INSTALL_PREFIX=./ ../
        ninja

    - name: Test IWYU
      working-directory: ./build
      run: |
        CTEST_OUTPUT_ON_FAILURE=1 ninja test

    - name: Test install
      working-directory: ./build
      run: |
        ninja install

    - name: Check license headers
      run: |
        git ls-tree --full-tree --name-only -r HEAD | xargs ./iwyu-check-license-header.py

    - name: Upload the build dir
      uses: actions/upload-artifact@v2
      with:
        path: ./build
